// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: nebula.proto

package nebula

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NebulaMeta_MessageType int32

const (
	NebulaMeta_None                   NebulaMeta_MessageType = 0
	NebulaMeta_HostQuery              NebulaMeta_MessageType = 1
	NebulaMeta_HostQueryReply         NebulaMeta_MessageType = 2
	NebulaMeta_HostUpdateNotification NebulaMeta_MessageType = 3
	NebulaMeta_HostMovedNotification  NebulaMeta_MessageType = 4
	NebulaMeta_HostPunchNotification  NebulaMeta_MessageType = 5
	NebulaMeta_HostWhoami             NebulaMeta_MessageType = 6
	NebulaMeta_HostWhoamiReply        NebulaMeta_MessageType = 7
	NebulaMeta_PathCheck              NebulaMeta_MessageType = 8
	NebulaMeta_PathCheckReply         NebulaMeta_MessageType = 9
)

// Enum value maps for NebulaMeta_MessageType.
var (
	NebulaMeta_MessageType_name = map[int32]string{
		0: "None",
		1: "HostQuery",
		2: "HostQueryReply",
		3: "HostUpdateNotification",
		4: "HostMovedNotification",
		5: "HostPunchNotification",
		6: "HostWhoami",
		7: "HostWhoamiReply",
		8: "PathCheck",
		9: "PathCheckReply",
	}
	NebulaMeta_MessageType_value = map[string]int32{
		"None":                   0,
		"HostQuery":              1,
		"HostQueryReply":         2,
		"HostUpdateNotification": 3,
		"HostMovedNotification":  4,
		"HostPunchNotification":  5,
		"HostWhoami":             6,
		"HostWhoamiReply":        7,
		"PathCheck":              8,
		"PathCheckReply":         9,
	}
)

func (x NebulaMeta_MessageType) Enum() *NebulaMeta_MessageType {
	p := new(NebulaMeta_MessageType)
	*p = x
	return p
}

func (x NebulaMeta_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NebulaMeta_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_nebula_proto_enumTypes[0].Descriptor()
}

func (NebulaMeta_MessageType) Type() protoreflect.EnumType {
	return &file_nebula_proto_enumTypes[0]
}

func (x NebulaMeta_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NebulaMeta_MessageType.Descriptor instead.
func (NebulaMeta_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_nebula_proto_rawDescGZIP(), []int{0, 0}
}

type NebulaPing_MessageType int32

const (
	NebulaPing_Ping  NebulaPing_MessageType = 0
	NebulaPing_Reply NebulaPing_MessageType = 1
)

// Enum value maps for NebulaPing_MessageType.
var (
	NebulaPing_MessageType_name = map[int32]string{
		0: "Ping",
		1: "Reply",
	}
	NebulaPing_MessageType_value = map[string]int32{
		"Ping":  0,
		"Reply": 1,
	}
)

func (x NebulaPing_MessageType) Enum() *NebulaPing_MessageType {
	p := new(NebulaPing_MessageType)
	*p = x
	return p
}

func (x NebulaPing_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NebulaPing_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_nebula_proto_enumTypes[1].Descriptor()
}

func (NebulaPing_MessageType) Type() protoreflect.EnumType {
	return &file_nebula_proto_enumTypes[1]
}

func (x NebulaPing_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NebulaPing_MessageType.Descriptor instead.
func (NebulaPing_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_nebula_proto_rawDescGZIP(), []int{3, 0}
}

type NebulaMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    NebulaMeta_MessageType `protobuf:"varint,1,opt,name=Type,proto3,enum=nebula.NebulaMeta_MessageType" json:"Type,omitempty"`
	Details *NebulaMetaDetails     `protobuf:"bytes,2,opt,name=Details,proto3" json:"Details,omitempty"`
}

func (x *NebulaMeta) Reset() {
	*x = NebulaMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebula_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NebulaMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NebulaMeta) ProtoMessage() {}

func (x *NebulaMeta) ProtoReflect() protoreflect.Message {
	mi := &file_nebula_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NebulaMeta.ProtoReflect.Descriptor instead.
func (*NebulaMeta) Descriptor() ([]byte, []int) {
	return file_nebula_proto_rawDescGZIP(), []int{0}
}

func (x *NebulaMeta) GetType() NebulaMeta_MessageType {
	if x != nil {
		return x.Type
	}
	return NebulaMeta_None
}

func (x *NebulaMeta) GetDetails() *NebulaMetaDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type NebulaMetaDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpnIp      uint32       `protobuf:"varint,1,opt,name=VpnIp,proto3" json:"VpnIp,omitempty"`
	IpAndPorts []*IpAndPort `protobuf:"bytes,2,rep,name=IpAndPorts,proto3" json:"IpAndPorts,omitempty"`
	Counter    uint32       `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
}

func (x *NebulaMetaDetails) Reset() {
	*x = NebulaMetaDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebula_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NebulaMetaDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NebulaMetaDetails) ProtoMessage() {}

func (x *NebulaMetaDetails) ProtoReflect() protoreflect.Message {
	mi := &file_nebula_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NebulaMetaDetails.ProtoReflect.Descriptor instead.
func (*NebulaMetaDetails) Descriptor() ([]byte, []int) {
	return file_nebula_proto_rawDescGZIP(), []int{1}
}

func (x *NebulaMetaDetails) GetVpnIp() uint32 {
	if x != nil {
		return x.VpnIp
	}
	return 0
}

func (x *NebulaMetaDetails) GetIpAndPorts() []*IpAndPort {
	if x != nil {
		return x.IpAndPorts
	}
	return nil
}

func (x *NebulaMetaDetails) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

type IpAndPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to IpAny:
	//	*IpAndPort_Ip
	//	*IpAndPort_Ipv6
	IpAny isIpAndPort_IpAny `protobuf_oneof:"IpAny"`
	Port  uint32            `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *IpAndPort) Reset() {
	*x = IpAndPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebula_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpAndPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpAndPort) ProtoMessage() {}

func (x *IpAndPort) ProtoReflect() protoreflect.Message {
	mi := &file_nebula_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpAndPort.ProtoReflect.Descriptor instead.
func (*IpAndPort) Descriptor() ([]byte, []int) {
	return file_nebula_proto_rawDescGZIP(), []int{2}
}

func (m *IpAndPort) GetIpAny() isIpAndPort_IpAny {
	if m != nil {
		return m.IpAny
	}
	return nil
}

func (x *IpAndPort) GetIp() uint32 {
	if x, ok := x.GetIpAny().(*IpAndPort_Ip); ok {
		return x.Ip
	}
	return 0
}

func (x *IpAndPort) GetIpv6() []byte {
	if x, ok := x.GetIpAny().(*IpAndPort_Ipv6); ok {
		return x.Ipv6
	}
	return nil
}

func (x *IpAndPort) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type isIpAndPort_IpAny interface {
	isIpAndPort_IpAny()
}

type IpAndPort_Ip struct {
	Ip uint32 `protobuf:"varint,1,opt,name=Ip,proto3,oneof"` // ipv4 only addresses here
}

type IpAndPort_Ipv6 struct {
	Ipv6 []byte `protobuf:"bytes,3,opt,name=Ipv6,proto3,oneof"`
}

func (*IpAndPort_Ip) isIpAndPort_IpAny() {}

func (*IpAndPort_Ipv6) isIpAndPort_IpAny() {}

type NebulaPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type NebulaPing_MessageType `protobuf:"varint,1,opt,name=Type,proto3,enum=nebula.NebulaPing_MessageType" json:"Type,omitempty"`
	Time uint64                 `protobuf:"varint,2,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *NebulaPing) Reset() {
	*x = NebulaPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebula_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NebulaPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NebulaPing) ProtoMessage() {}

func (x *NebulaPing) ProtoReflect() protoreflect.Message {
	mi := &file_nebula_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NebulaPing.ProtoReflect.Descriptor instead.
func (*NebulaPing) Descriptor() ([]byte, []int) {
	return file_nebula_proto_rawDescGZIP(), []int{3}
}

func (x *NebulaPing) GetType() NebulaPing_MessageType {
	if x != nil {
		return x.Type
	}
	return NebulaPing_Ping
}

func (x *NebulaPing) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type NebulaHandshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *NebulaHandshakeDetails `protobuf:"bytes,1,opt,name=Details,proto3" json:"Details,omitempty"`
	Hmac    []byte                  `protobuf:"bytes,2,opt,name=Hmac,proto3" json:"Hmac,omitempty"`
}

func (x *NebulaHandshake) Reset() {
	*x = NebulaHandshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebula_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NebulaHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NebulaHandshake) ProtoMessage() {}

func (x *NebulaHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_nebula_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NebulaHandshake.ProtoReflect.Descriptor instead.
func (*NebulaHandshake) Descriptor() ([]byte, []int) {
	return file_nebula_proto_rawDescGZIP(), []int{4}
}

func (x *NebulaHandshake) GetDetails() *NebulaHandshakeDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *NebulaHandshake) GetHmac() []byte {
	if x != nil {
		return x.Hmac
	}
	return nil
}

type NebulaHandshakeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert           []byte `protobuf:"bytes,1,opt,name=Cert,proto3" json:"Cert,omitempty"`
	InitiatorIndex uint32 `protobuf:"varint,2,opt,name=InitiatorIndex,proto3" json:"InitiatorIndex,omitempty"`
	ResponderIndex uint32 `protobuf:"varint,3,opt,name=ResponderIndex,proto3" json:"ResponderIndex,omitempty"`
	Cookie         uint64 `protobuf:"varint,4,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	Time           uint64 `protobuf:"varint,5,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *NebulaHandshakeDetails) Reset() {
	*x = NebulaHandshakeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebula_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NebulaHandshakeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NebulaHandshakeDetails) ProtoMessage() {}

func (x *NebulaHandshakeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_nebula_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NebulaHandshakeDetails.ProtoReflect.Descriptor instead.
func (*NebulaHandshakeDetails) Descriptor() ([]byte, []int) {
	return file_nebula_proto_rawDescGZIP(), []int{5}
}

func (x *NebulaHandshakeDetails) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *NebulaHandshakeDetails) GetInitiatorIndex() uint32 {
	if x != nil {
		return x.InitiatorIndex
	}
	return 0
}

func (x *NebulaHandshakeDetails) GetResponderIndex() uint32 {
	if x != nil {
		return x.ResponderIndex
	}
	return 0
}

func (x *NebulaHandshakeDetails) GetCookie() uint64 {
	if x != nil {
		return x.Cookie
	}
	return 0
}

func (x *NebulaHandshakeDetails) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_nebula_proto protoreflect.FileDescriptor

var file_nebula_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x22, 0xcc, 0x02, 0x0a, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c,
	0x61, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x2e, 0x4e, 0x65, 0x62,
	0x75, 0x6c, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x62,
	0x75, 0x6c, 0x61, 0x2e, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd4,
	0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x6f, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x6f, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x48,
	0x6f, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x6f, 0x73, 0x74, 0x4d,
	0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x75, 0x6e, 0x63, 0x68, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x0e, 0x0a,
	0x0a, 0x48, 0x6f, 0x73, 0x74, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x10, 0x06, 0x12, 0x13, 0x0a,
	0x0f, 0x48, 0x6f, 0x73, 0x74, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x10,
	0x08, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x61, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x10, 0x09, 0x22, 0x76, 0x0a, 0x11, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x4d,
	0x65, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x70,
	0x6e, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x56, 0x70, 0x6e, 0x49, 0x70,
	0x12, 0x31, 0x0a, 0x0a, 0x49, 0x70, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x2e, 0x49, 0x70,
	0x41, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x0a, 0x49, 0x70, 0x41, 0x6e, 0x64, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x50, 0x0a,
	0x09, 0x49, 0x70, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x49, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x70, 0x12, 0x14, 0x0a, 0x04,
	0x49, 0x70, 0x76, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x49, 0x70,
	0x76, 0x36, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x49, 0x70, 0x41, 0x6e, 0x79, 0x22,
	0x78, 0x0a, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6e, 0x65,
	0x62, 0x75, 0x6c, 0x61, 0x2e, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x69, 0x6e, 0x67, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x10, 0x01, 0x22, 0x5f, 0x0a, 0x0f, 0x4e, 0x65, 0x62,
	0x75, 0x6c, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x38, 0x0a, 0x07,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x2e, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x48, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6d, 0x61, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x48, 0x6d, 0x61, 0x63, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x4e,
	0x65, 0x62, 0x75, 0x6c, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x43, 0x65, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nebula_proto_rawDescOnce sync.Once
	file_nebula_proto_rawDescData = file_nebula_proto_rawDesc
)

func file_nebula_proto_rawDescGZIP() []byte {
	file_nebula_proto_rawDescOnce.Do(func() {
		file_nebula_proto_rawDescData = protoimpl.X.CompressGZIP(file_nebula_proto_rawDescData)
	})
	return file_nebula_proto_rawDescData
}

var file_nebula_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nebula_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nebula_proto_goTypes = []interface{}{
	(NebulaMeta_MessageType)(0),    // 0: nebula.NebulaMeta.MessageType
	(NebulaPing_MessageType)(0),    // 1: nebula.NebulaPing.MessageType
	(*NebulaMeta)(nil),             // 2: nebula.NebulaMeta
	(*NebulaMetaDetails)(nil),      // 3: nebula.NebulaMetaDetails
	(*IpAndPort)(nil),              // 4: nebula.IpAndPort
	(*NebulaPing)(nil),             // 5: nebula.NebulaPing
	(*NebulaHandshake)(nil),        // 6: nebula.NebulaHandshake
	(*NebulaHandshakeDetails)(nil), // 7: nebula.NebulaHandshakeDetails
}
var file_nebula_proto_depIdxs = []int32{
	0, // 0: nebula.NebulaMeta.Type:type_name -> nebula.NebulaMeta.MessageType
	3, // 1: nebula.NebulaMeta.Details:type_name -> nebula.NebulaMetaDetails
	4, // 2: nebula.NebulaMetaDetails.IpAndPorts:type_name -> nebula.IpAndPort
	1, // 3: nebula.NebulaPing.Type:type_name -> nebula.NebulaPing.MessageType
	7, // 4: nebula.NebulaHandshake.Details:type_name -> nebula.NebulaHandshakeDetails
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_nebula_proto_init() }
func file_nebula_proto_init() {
	if File_nebula_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nebula_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NebulaMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebula_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NebulaMetaDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebula_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpAndPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebula_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NebulaPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebula_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NebulaHandshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebula_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NebulaHandshakeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nebula_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*IpAndPort_Ip)(nil),
		(*IpAndPort_Ipv6)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nebula_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebula_proto_goTypes,
		DependencyIndexes: file_nebula_proto_depIdxs,
		EnumInfos:         file_nebula_proto_enumTypes,
		MessageInfos:      file_nebula_proto_msgTypes,
	}.Build()
	File_nebula_proto = out.File
	file_nebula_proto_rawDesc = nil
	file_nebula_proto_goTypes = nil
	file_nebula_proto_depIdxs = nil
}
